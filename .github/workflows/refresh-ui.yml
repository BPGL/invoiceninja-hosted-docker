name: Rebuild and restart application

on:
  workflow_dispatch:

jobs:
  restartapp:
    runs-on: ubuntu-latest
    env:
      SSH_USER: "${{ vars.SSH_USER }}"
      SSH_KEY_ENCODED: "${{ secrets.SSH_KEY_ENCODED }}"
      SSH_HOST: "${{ secrets.SSH_HOST }}"
      WORKDIR: "${{ secrets.WORKDIR }}"

    steps:
      - name: Configure SSH client
        run: |
          mkdir -p ~/.ssh/
          echo $SSH_KEY_ENCODED | base64 --decode > ~/.ssh/server_key.key
          chmod 600 ~/.ssh/server_key.key
          cat >>~/.ssh/config <<END
          Host inserver
            HostName $SSH_HOST
            User $SSH_USER
            IdentityFile ~/.ssh/server_key.key
            StrictHostKeyChecking no
          END

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_DEPLOYER_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_DEPLOYER_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_DEPLOYER_REGION }}


      - name: Get Runner IP Address
        id: get-ip
        run: echo "ip_address=$(curl -s https://api64.ipify.org?format=json | jq -r '.ip')" >> $GITHUB_OUTPUT

      - name: Open Access to Security Group
        run: |
          aws ec2 authorize-security-group-ingress \
            --group-id ${{ secrets.AWS_SG_ID }} \
            --protocol tcp \
            --port 22 \
            --cidr ${{ steps.get-ip.outputs.ip_address }}/32


      - name: Rebuild app
        run: ssh inserver "sudo sh -c 'cd $WORKDIR/ && ./docker-create-react-ui.sh'"


      - name: Remove Access from Security Group
        if: always()
        run: |
          aws ec2 revoke-security-group-ingress \
            --group-id ${{ secrets.AWS_SG_ID }} \
            --protocol tcp \
            --port 22 \
            --cidr ${{ steps.get-ip.outputs.ip_address }}/32
    
